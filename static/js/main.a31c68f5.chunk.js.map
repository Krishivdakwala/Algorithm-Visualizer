{"version":3,"sources":["Redux Store/reducers/index.js","Components/InfoPages/InsertionInfo.jsx","Components/Bar.jsx","helper.jsx","Components/SelectionSort.jsx","Components/Home.jsx","Components/BubbleSort.jsx","Components/InsertionSort.jsx","Components/MergeSort.jsx","Components/HomeSearch.jsx","Components/HomeSort.jsx","Components/LinearSearch.jsx","Components/BinarySearch.jsx","Components/InfoPages/BubbleInfo.jsx","Components/InfoPages/SelectionInfo.jsx","Components/InfoPages/LinearInfo.jsx","Components/InfoPages/BinaryInfo.jsx","App.js","reportWebVitals.js","index.js"],"names":["rootReducer","combineReducers","InsertionInfo","style","display","flexDirection","justifyContent","alignItems","color","margin","fontWeight","fontSize","Divider","height","width","backgroundColor","flexWrap","marginTop","Button","variant","href","borderRadius","padding","Component","Bar","motion","div","initial","x","this","props","animate","transition","duration","value","sleep","ms","Promise","resolve","setTimeout","MySlider","withStyles","markLabel","Slider","marks","label","SelectionSort","valuetext","changeWidth","arraySize","state","setState","handleChangeSlider","event","val","generateNewArray","handleChangeSpeedSlider","speed","arr","i","rand","Math","random","floor","index","startAnimation","a","stop","temp_arr","_","clone","n","outerms","innerms","min_val","prev_min","flag","dist","j","console","log","temp_obj","stopAnimation","boxShadow","whileHover","cursor","to","textDecoration","onClick","onChange","defaultValue","min","max","valueLabelDisplay","marginRight","getAriaValueText","aria-labelledby","step","disabled","map","item","Home","sorting_algo","title","theory","path","bg","scale","it1","itr","BubbleSort","MergeSort","window","location","reload","HomeSearch","path2","HomeSort","LinearSearch","search","disableInput","enableInput","TextField","id","InputProps","background","paddingBottom","placeholder","toString","e","target","BinarySearch","numberSort","b","randNum","push","sort","length","l","u","m","z","BubbleInfo","SelectionInfo","LinearInfo","BinaryInfo","store","createStore","reducers","composeWithDevTools","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a31c68f5.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\n\nconst rootReducer = combineReducers({\n\n});\n\nexport default rootReducer;","import { Divider, Button } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass InsertionInfo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fade>\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',color:'white'}}>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'30px'}}>Algorithms Visualizer</div>\r\n\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>Insertion Sort</div>\r\n                <div style={{width:'60%',display:'flex',justifyContent:'space-around',flexWrap:'wrap',alignItems:'center',marginTop:'30px'}}>\r\n                {\r\n                    <p>\r\n                        Insertion sort is a simple sorting algorithm that works similar to the way you sort playing cards in your hands. The array is virtually split into a sorted and an unsorted part. Values from the unsorted part are picked and placed at the correct position in the sorted part.<br/>\r\n                        <br/><strong>Algorithm</strong>&nbsp;<br/>\r\n                        To sort an array of size n in ascending order:&nbsp;<br/>\r\n                        1: Iterate from arr[1] to arr[n] over the array.&nbsp;<br/>\r\n                        2: Compare the current element (key) to its predecessor.&nbsp;<br/>\r\n                        3: If the key element is smaller than its predecessor, compare it to the elements before. Move the greater elements one position up to make space for the swapped element.<br/>\r\n                        <br/><strong>Example:&nbsp;</strong><br/>\r\n                        <strong>12</strong>, 11, 13, 5, 6<br/>\r\n                        Let us loop for i = 1 (second element of the array) to 4 (last element of the array)<br/><br/>\r\n                        i = 1. Since 11 is smaller than 12, move 12 and insert 11 before 12&nbsp;<br/>\r\n                        <strong>11, 12</strong>, 13, 5, 6<br/><br/>\r\n                        i = 2. 13 will remain at its position as all elements in A[0..I-1] are smaller than 13&nbsp;<br/>\r\n                        <strong>11, 12, 13</strong>, 5, 6<br/><br/>\r\n                        i = 3. 5 will move to the beginning and all other elements from 11 to 13 will move one position ahead of their current position.&nbsp;<br/>\r\n                        <strong>5, 11, 12, 13</strong>, 6<br/><br/>\r\n                        i = 4. 6 will move to position after 5, and elements from 11 to 13 will move one position ahead of their current position.&nbsp;<br/>\r\n                        <strong>5, 6, 11, 12, 13&nbsp;</strong><br/><br/><br/>\r\n                        <strong>Time Complexity: </strong>O(n<sup>2</sup>)\r\n                    </p>\r\n                    \r\n                }\r\n                </div>\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white',marginTop:'30px'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Home Page</Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer/insertion-sort\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Visualize</Button>\r\n                                            \r\n                </div>\r\n\r\n            </div>\r\n            \r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InsertionInfo;","import { motion } from 'framer-motion';\nimport React, { Component } from 'react';\n\nclass Bar extends Component {\n\n\n    render() {\n        return (\n            <motion.div \n                initial={{\n                    x:this.props.x,\n                    backgroundColor:this.props.color\n                }}\n                animate={{\n                    x:this.props.x,\n                    backgroundColor:this.props.color\n                }}\n                transition={{duration:1}}\n                style={{height:this.props.value,width:`${this.props.width}px`,margin:'5px',color:'#fff',display:'flex',justifyContent:'center',alignItems:'flex-end'}}\n            >\n                {\n                    (this.props.width===30)?this.props.value:null\n                }\n            </motion.div>\n        );\n    }\n}\n\nexport default Bar;","export const sleep=(ms)=>{\n    return new Promise(\n      resolve => setTimeout(resolve, ms)\n    );\n}","import { Button, Divider, Slider } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport Bar from './Bar';\r\nimport {sleep} from '../helper';\r\nimport _ from 'lodash';\r\nimport { motion } from 'framer-motion';\r\nimport {Link} from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst MySlider = withStyles({\r\n    markLabel:{\r\n      color:\"#fff\",\r\n      fontSize:'13px',\r\n      \r\n    },\r\n\r\n  })(Slider);\r\n  \r\n  const marks = [\r\n    {\r\n      value: 1,\r\n      label: '1X',\r\n    },\r\n    {\r\n      value: 2,\r\n      label: '2X',\r\n    },\r\n    {\r\n      value: 3,\r\n      label: '3X',\r\n    },\r\n  ];\r\n\r\nclass SelectionSort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            arraySize:20,\r\n            arr:[],\r\n            width:30,\r\n            stop:true,\r\n            speed:1,\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    valuetext = (value)=> {\r\n        return `${value-1}X`;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.changeWidth();\r\n        this.generateNewArray();\r\n        \r\n    }\r\n\r\n    changeWidth = ()=>{\r\n        const {arraySize} = this.state;\r\n\r\n        if(arraySize<=35){\r\n            this.setState({width:30})\r\n        }\r\n        else if(arraySize>35 && arraySize<=50){\r\n            this.setState({width:20})\r\n        }\r\n        else{\r\n            this.setState({width:5})\r\n        }\r\n    }\r\n\r\n    handleChangeSlider=(event,val)=>{\r\n        this.setState({arraySize:val})\r\n        this.changeWidth();\r\n        this.generateNewArray();\r\n    }\r\n\r\n    handleChangeSpeedSlider = (event,val)=>{\r\n        this.setState({speed:val});\r\n    }\r\n\r\n    generateNewArray=()=>{\r\n        this.changeWidth();\r\n        let arr = [];\r\n        let min = 1,max = 500;\r\n        for(let i=0;i<this.state.arraySize;i++){\r\n            let rand = min + Math.random() * (max - min);\r\n            arr = [...arr,{val:Math.floor(rand),x:0,index:i,color:'#00FFFF'}];\r\n        }\r\n        this.setState({arr});\r\n    }\r\n\r\n    startAnimation= async ()=>{\r\n\r\n        this.setState({stop:false})\r\n        await sleep(100);\r\n\r\n        const {width,stop} = this.state;        \r\n\r\n        let arr = this.state.arr;\r\n        let temp_arr = _.clone(arr);\r\n        let n = this.state.arraySize;\r\n        let ms = 500;\r\n        let outerms,innerms;\r\n        let flag = false;\r\n\r\n        if(this.state.speed===1){\r\n            outerms=500;\r\n            innerms=1000;\r\n        }\r\n        else if(this.state.speed===2){\r\n            outerms=200;\r\n            innerms=500;\r\n        }\r\n        else{\r\n            outerms=10;\r\n            innerms=10;\r\n        }\r\n        \r\n        for(let i=0;i<n-1;i++){\r\n            await sleep(outerms);\r\n            arr[temp_arr[i].index].color = '#303F9F';\r\n            let min_val = temp_arr[i].val;\r\n            let prev_min = i+1;\r\n            let flag = 0;\r\n            let dist = width;\r\n            for(let j=i+1;j<n;j++){\r\n                await sleep(innerms);\r\n                \r\n                arr[temp_arr[j].index].color = '#303F9F';\r\n                this.setState({arr});\r\n                if(temp_arr[j].val < min_val){\r\n                    min_val = temp_arr[j].val;    \r\n                    arr[temp_arr[j].index].color = '#ff0000';\r\n                    arr[temp_arr[prev_min].index].color = '#00FFFF';\r\n                    prev_min = j;    \r\n                    dist = (j - i )*(width + 10);\r\n                    flag = 1;\r\n                }\r\n\r\n                console.log('arr',arr)\r\n                \r\n                if(j < n-1){\r\n                    if(temp_arr[j].val != min_val){\r\n                        arr[temp_arr[j].index].color = '#00FFFF';\r\n                        arr[temp_arr[j+1].index].color = '#00FFFF';\r\n                    }\r\n                    else{\r\n                        arr[temp_arr[j].index].color = '#ff0000';\r\n                        arr[temp_arr[j+1].index].color = '#00FFFF';\r\n                    }\r\n                }\r\n                else{\r\n                    if(temp_arr[j].val != min_val){\r\n                        arr[temp_arr[j].index].color = '#00FFFF';\r\n                    }\r\n                    else{\r\n                        arr[temp_arr[j].index].color = '#ff0000';\r\n                    }\r\n                }\r\n                \r\n                \r\n                setTimeout(() => {\r\n                    \r\n                    this.setState({arr});\r\n                }, innerms);\r\n  \r\n            }\r\n            \r\n            if(flag == 1){\r\n                arr[temp_arr[prev_min].index].color = '#00FFFF';\r\n                arr[temp_arr[i].index].color = '#00FFFF'\r\n                let temp_obj = temp_arr[prev_min];\r\n                temp_arr[prev_min] = temp_arr[i];\r\n                temp_arr[i] = temp_obj;\r\n\r\n\r\n                arr[temp_arr[prev_min].index].x += (dist);\r\n                arr[temp_arr[i].index].x -= (dist);     \r\n                \r\n                \r\n            }\r\n            else{\r\n                arr[temp_arr[i].index].color = '#00FFFF';\r\n            }\r\n\r\n              \r\n        }\r\n       \r\n    }\r\n\r\n    stopAnimation = ()=>{\r\n        this.setState({stop:true});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',height:'100px',width:'100%'}}>\r\n                    <div style={{display:'flex'}}>\r\n                        <motion.div \r\n                        \r\n                        initial={{height:'70px',width:'150px',backgroundColor:'#4CAF50',color:'white',borderRadius:'5px',padding:'5px',boxShadow:'0px 2px green',marginTop:'-25px'}}\r\n                        whileHover={{cursor:'pointer'}}\r\n                        >\r\n                            <Link  to=\"/Algorithm-Visualizer/\" style={{height:'70px',width:'150px',textDecoration:'none',color:'white',display:'flex',justifyContent:'center'}}>\r\n                                <p style={{height:'70px',width:'150px',display:'flex',justifyContent:'center'}}>Algorithm Visualizer</p>\r\n                            </Link>\r\n                        </motion.div>\r\n\r\n                        <Button onClick={this.generateNewArray} style={{margin:'10px'}} color=\"primary\" variant=\"contained\">Generate New Array</Button>\r\n                    </div>\r\n                    \r\n                    <Slider\r\n                        style={{width:'300px',margin:'10px'}}\r\n                        value={this.state.arraySize}\r\n                        onChange={this.handleChangeSlider}\r\n                        defaultValue={8}\r\n                        min={1}\r\n                        max={100}\r\n                        valueLabelDisplay=\"auto\"\r\n                    />\r\n                </div>\r\n                <Divider style={{height:'2px',width:'100%',margin:'10px 10px 0px 10px',backgroundColor:'white'}}/>\r\n                <div style={{width:'100%',display:'flex',justifyContent:'flex-end'}}>\r\n                    <div style={{width:'250px',backgroundColor:'#15314B',display:'flex',justifyContent:'center',marginRight:'5px'}}>\r\n                        <div style={{width:150,display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                        <MySlider\r\n                            defaultValue={1}\r\n                            getAriaValueText={this.valuetext}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={1}\r\n                            disabled={!this.state.stop}\r\n                            onChange={this.handleChangeSpeedSlider}\r\n                            marks = {marks}\r\n                            min={1}\r\n                            max={3}\r\n                            \r\n                        />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n\r\n                <div style={{display:'flex',justifyContent:'center',alignItems:'flex-end'}}>\r\n                    {\r\n                        this.state.arr.map((item,index)=>(\r\n                            <div key={index}>\r\n                            <Bar\r\n                                value={item.val}\r\n                                x = {item.x}\r\n                                color={item.color}\r\n                                width={this.state.width}\r\n                            />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div style={{display:'flex'}}>\r\n                    <Button onClick={this.startAnimation} style={{width:'200px', margin:'20px'}} color=\"secondary\" variant=\"contained\">Start</Button>\r\n                    {/* <Button onClick={this.stopAnimation} style={{width:'200px', margin:'20px'}} href=\"/Algorithm-Visualizer/selection-sort\" color=\"secondary\" variant=\"contained\">Stop</Button> */}\r\n                </div>\r\n                \r\n                <Divider style={{height:'2px',width:'100%',margin:'10px',backgroundColor:'white'}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionSort;","import { Divider, Button } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport Fade from 'react-reveal/Fade';\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            sorting_algo:[\r\n                {\r\n                    title:\"Sorting Algorithms\",\r\n                    theory:\"Visualize the sorting process of a randomly generated array\",\r\n                    path:\"/Algorithm-Visualizer/sorting\",\r\n                    bg: '#54BD68',\r\n   \r\n                },\r\n                {\r\n                    title:\"Searching Algorithms\",\r\n                    theory:\"Visualize the searching process of an element from an array\",\r\n                    path:\"/Algorithm-Visualizer/searching\",\r\n                    bg: '#ff00ff',\r\n  \r\n                },\r\n                \r\n            ],\r\n            \r\n        }\r\n    }\r\n\r\n    generateNewArray=()=>{\r\n        let arr = [];\r\n        let min = 20,max = 100;\r\n        for(let i=0;i<10;i++){\r\n            let rand = min + Math.random() * (max - min);\r\n            arr=[...arr,rand]\r\n        }\r\n        return arr;\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Fade>\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',color:'white'}}>\r\n            \r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'30px'}}>Algorithms Visualizer</div>\r\n            \r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>Select Type</div>\r\n                <div style={{width:'50%',display:'flex',justifyContent:'space-around',flexWrap:'wrap',alignItems:'center',marginTop:'30px'}}>\r\n                {\r\n                    this.state.sorting_algo.map((item,index)=>{\r\n                        let color = item.bg;\r\n                        return(\r\n                            <Link to={item.path} style={{textDecoration:'none',color:'#C51162',margin:'5px'}}>\r\n                                <motion.div\r\n                                    \r\n                                    key={index}\r\n                                    initial={{backgroundColor:'#00182E',color:'#fff',borderRadius:'5px',cursor:'pointer',margin:'10px',width:'300px',height:'350px',display:'flex',justifyContent:'space-between',alignItems:'center',flexDirection:'column'}}\r\n                                    whileHover={{boxShadow:'3px 2px 2px  aqua',scale:'1.1',transition:'transform 6s cubic-bezier(0.075, 0.82, 0.165, 1)'}}\r\n                                    \r\n                                    >\r\n                                    <div style={{width:'300px',height:'175px',display:'flex',alignItems:'flex-end',justifyContent:'center',backgroundColor:color}}>\r\n                                        {\r\n                                                this.generateNewArray().map((it1,itr)=>{\r\n                                                    return(\r\n                                                        <span key={itr} style={{backgroundColor:'white',height:`${it1}px`,width:'20px',margin:'2px',}}>\r\n                                                        </span>\r\n                                                    )\r\n                                                })\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <motion.div initial={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',width:'300px'}}\r\n                                        whileHover={{backgroundColor:'#02203C'}}\r\n                                    >\r\n                                        <div style={{width:'270px'}}>\r\n                                            <h2>\r\n                                                {item.title}\r\n                                            </h2>\r\n                                            <p>\r\n                                                {item.theory}\r\n                                            </p>\r\n                                        </div>\r\n                                        \r\n                                    </motion.div>\r\n                                    <div style={{display:'flex',justifyContent:'center',width:'270px',margin:'5px'}}>\r\n                                            <Link to={item.path} style={{textDecoration:'none',color:'#C51162',margin:'5px'}}>Visualization</Link>\r\n                                            \r\n                                    </div>\r\n                                    \r\n                                </motion.div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white',marginTop:'30px'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>\r\n                <Button variant=\"contained\" href=\"https://in.linkedin.com/in/krishiv-dakwala\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>About Me</Button>\r\n                </div>\r\n                \r\n            </div>\r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import { Button, Divider, Slider } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport Bar from './Bar';\nimport {sleep} from '../helper';\nimport _ from 'lodash';\nimport { motion } from 'framer-motion';\nimport {Link} from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst MySlider = withStyles({\n    markLabel:{\n      color:\"#fff\",\n      fontSize:'13px',\n      \n    },\n\n  })(Slider);\n  \n  const marks = [\n    {\n      value: 1,\n      label: '1X',\n    },\n    {\n      value: 2,\n      label: '2X',\n    },\n    {\n      value: 3,\n      label: '3X',\n    },\n  ];\n\nclass BubbleSort extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            arraySize:20,\n            arr:[],\n            width:30,\n            stop:true,\n            speed:1,\n        }\n\n        \n    }\n\n    valuetext = (value)=> {\n        return `${value-1}X`;\n    }\n\n    componentDidMount(){\n        this.changeWidth();\n        this.generateNewArray();\n        \n    }\n\n    changeWidth = ()=>{\n        const {arraySize} = this.state;\n\n        if(arraySize<=35){\n            this.setState({width:30})\n        }\n        else if(arraySize>35 && arraySize<=50){\n            this.setState({width:20})\n        }\n        else{\n            this.setState({width:5})\n        }\n    }\n\n    handleChangeSlider=(event,val)=>{\n        this.setState({arraySize:val})\n        this.changeWidth();\n        this.generateNewArray();\n    }\n\n    handleChangeSpeedSlider = (event,val)=>{\n        this.setState({speed:val});\n    }\n\n    generateNewArray=()=>{\n        this.changeWidth();\n        let arr = [];\n        let min = 1,max = 500;\n        for(let i=0;i<this.state.arraySize;i++){\n            let rand = min + Math.random() * (max - min);\n            arr = [...arr,{val:Math.floor(rand),x:0,index:i,color:'#00FFFF'}];\n        }\n        this.setState({arr});\n    }\n\n    startAnimation= async ()=>{\n\n        this.setState({stop:false})\n        await sleep(100);\n\n        const {width,stop} = this.state;        \n\n        let arr = this.state.arr;\n        let temp_arr = _.clone(arr);\n        let n = this.state.arraySize;\n        let ms = 500;\n        let outerms,innerms;\n        let flag = false;\n\n        if(this.state.speed===1){\n            outerms=500;\n            innerms=1000;\n        }\n        else if(this.state.speed===2){\n            outerms=200;\n            innerms=500;\n        }\n        else{\n            outerms=10;\n            innerms=10;\n        }\n        \n        for(let i=0;i<n-1;i++){\n            await sleep(outerms);\n            for(let j=0;j<n-i-1;j++){\n                await sleep(innerms);\n                arr[temp_arr[j].index].color = '#303F9F';\n                arr[temp_arr[j+1].index].color = '#303F9F';\n                this.setState({arr});\n                if(temp_arr[j].val > temp_arr[j+1].val){\n                    let temp_obj = temp_arr[j];\n                    temp_arr[j] = temp_arr[j+1];\n                    temp_arr[j+1] = temp_obj;\n\n\n                    arr[temp_arr[j].index].x -= (width+10);\n                    arr[temp_arr[j+1].index].x += (width+10);                                     \n\n                    \n                }\n                console.log('arr',arr)\n                \n                arr[temp_arr[j].index].color = '#00FFFF';\n                arr[temp_arr[j+1].index].color = '#00FFFF';\n                setTimeout(() => {\n                    \n                    this.setState({arr});\n                }, innerms);\n  \n            }\n        }\n    }\n\n    stopAnimation = ()=>{\n        this.setState({stop:true});\n    }\n    \n    render() {\n        return (\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\n                <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',height:'100px',width:'100%'}}>\n                    <div style={{display:'flex'}}>\n                        <motion.div \n                        \n                        initial={{height:'70px',width:'150px',backgroundColor:'#4CAF50',color:'white',borderRadius:'5px',padding:'5px',boxShadow:'0px 2px green',marginTop:'-25px'}}\n                        whileHover={{cursor:'pointer'}}\n                        >\n                            <Link  to=\"/Algorithm-Visualizer/\" style={{height:'70px',width:'150px',textDecoration:'none',color:'white',display:'flex',justifyContent:'center'}}>\n                                <p style={{height:'70px',width:'150px',display:'flex',justifyContent:'center'}}>Algorithm Visualizer</p>\n                            </Link>\n                        </motion.div>\n\n                        <Button onClick={this.generateNewArray} style={{margin:'10px'}} color=\"primary\" variant=\"contained\">Generate New Array</Button>\n                    </div>\n                    \n                    <Slider\n                        style={{width:'300px',margin:'10px'}}\n                        value={this.state.arraySize}\n                        onChange={this.handleChangeSlider}\n                        defaultValue={8}\n                        min={1}\n                        max={100}\n                        valueLabelDisplay=\"auto\"\n                    />\n                </div>\n                <Divider style={{height:'2px',width:'100%',margin:'10px 10px 0px 10px',backgroundColor:'white'}}/>\n                <div style={{width:'100%',display:'flex',justifyContent:'flex-end'}}>\n                    <div style={{width:'250px',backgroundColor:'#15314B',display:'flex',justifyContent:'center',marginRight:'5px'}}>\n                        <div style={{width:150,display:'flex',justifyContent:'center',alignItems:'center'}}>\n                        <MySlider\n                            defaultValue={1}\n                            getAriaValueText={this.valuetext}\n                            aria-labelledby=\"discrete-slider\"\n                            valueLabelDisplay=\"auto\"\n                            step={1}\n                            disabled={!this.state.stop}\n                            onChange={this.handleChangeSpeedSlider}\n                            marks = {marks}\n                            min={1}\n                            max={3}\n                            \n                        />\n                        </div>\n                    </div>\n                    \n                </div>\n                \n\n                <div style={{display:'flex',justifyContent:'center',alignItems:'flex-end'}}>\n                    {\n                        this.state.arr.map((item,index)=>(\n                            <div key={index}>\n                            <Bar\n                                value={item.val}\n                                x = {item.x}\n                                color={item.color}\n                                width={this.state.width}\n                            />\n                            </div>\n                        ))\n                    }\n                </div>\n                <div style={{display:'flex'}}>\n                    <Button onClick={this.startAnimation} style={{width:'200px', margin:'20px'}} color=\"secondary\" variant=\"contained\">Start</Button>\n                    {/* <Button onClick={this.stopAnimation} style={{width:'200px', margin:'20px'}} href=\"/Algorithm-Visualizer/bubble-sort\" color=\"secondary\" variant=\"contained\">Stop</Button> */}\n                </div>\n                \n                <Divider style={{height:'2px',width:'100%',margin:'10px',backgroundColor:'white'}}/>\n            </div>\n        );\n    }\n}\n\nexport default BubbleSort;","import { Button, Divider, Slider } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport Bar from './Bar';\r\nimport {sleep} from '../helper';\r\nimport _ from 'lodash';\r\nimport { motion } from 'framer-motion';\r\nimport {Link} from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst MySlider = withStyles({\r\n    markLabel:{\r\n      color:\"#fff\",\r\n      fontSize:'13px',\r\n      \r\n    },\r\n\r\n  })(Slider);\r\n  \r\n  const marks = [\r\n    {\r\n      value: 1,\r\n      label: '1X',\r\n    },\r\n    {\r\n      value: 2,\r\n      label: '2X',\r\n    },\r\n    {\r\n      value: 3,\r\n      label: '3X',\r\n    },\r\n  ];\r\n\r\nclass InsertionSort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            arraySize:20,\r\n            arr:[],\r\n            width:30,\r\n            stop:true,\r\n            speed:1,\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    valuetext = (value)=> {\r\n        return `${value-1}X`;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.changeWidth();\r\n        this.generateNewArray();\r\n        \r\n    }\r\n\r\n    changeWidth = ()=>{\r\n        const {arraySize} = this.state;\r\n\r\n        if(arraySize<=35){\r\n            this.setState({width:30})\r\n        }\r\n        else if(arraySize>35 && arraySize<=50){\r\n            this.setState({width:20})\r\n        }\r\n        else{\r\n            this.setState({width:5})\r\n        }\r\n    }\r\n\r\n    handleChangeSlider=(event,val)=>{\r\n        this.setState({arraySize:val})\r\n        this.changeWidth();\r\n        this.generateNewArray();\r\n    }\r\n\r\n    handleChangeSpeedSlider = (event,val)=>{\r\n        this.setState({speed:val});\r\n    }\r\n\r\n    generateNewArray=()=>{\r\n        this.changeWidth();\r\n        let arr = [];\r\n        let min = 1,max = 500;\r\n        for(let i=0;i<this.state.arraySize;i++){\r\n            let rand = min + Math.random() * (max - min);\r\n            arr = [...arr,{val:Math.floor(rand),x:0,index:i,color:'#00FFFF'}];\r\n        }\r\n        this.setState({arr});\r\n    }\r\n\r\n    startAnimation= async ()=>{\r\n\r\n        this.setState({stop:false})\r\n        await sleep(100);\r\n\r\n        const {width,stop} = this.state;        \r\n\r\n        let arr = this.state.arr;\r\n        let temp_arr = _.clone(arr);\r\n        let n = this.state.arraySize;\r\n        let ms = 500;\r\n        let outerms,innerms;\r\n        let flag = false;\r\n\r\n        if(this.state.speed===1){\r\n            outerms=500;\r\n            innerms=1000;\r\n        }\r\n        else if(this.state.speed===2){\r\n            outerms=200;\r\n            innerms=500;\r\n        }\r\n        else{\r\n            outerms=10;\r\n            innerms=10;\r\n        }\r\n        // ================================================================\r\n\r\n        for(let i=1;i<n;i++){\r\n            await sleep(outerms);\r\n            let key = temp_arr[i].val;\r\n            let j = i - 1;\r\n\r\n            arr[temp_arr[i-1].index].color = '#303F9F';\r\n            arr[temp_arr[i].index].color = '#ff0000';\r\n            this.setState({arr});\r\n            while(j >=0 && temp_arr[j].val > key){\r\n                await sleep(innerms);\r\n                if(j <= i - 2){\r\n                    arr[temp_arr[j + 1].index].color = '#00FFFF';\r\n                    arr[temp_arr[j].index].color = '#303F9F';\r\n                    this.setState({arr});\r\n                    j = j - 1;\r\n                }\r\n                else{\r\n                    arr[temp_arr[j].index].color = '#303F9F';\r\n                    this.setState({arr});\r\n                    j = j - 1;\r\n                }  \r\n\r\n                setTimeout(() => {\r\n                    \r\n                    this.setState({arr});\r\n                }, innerms);\r\n            }\r\n\r\n            let z = i;\r\n            while(temp_arr[z] < temp_arr[z - 1]){\r\n                \r\n\r\n                let temp_obj = temp_arr[z - 1];\r\n                temp_arr[z - 1] = temp_arr[z];\r\n                temp_arr[z] = temp_obj;\r\n\r\n                arr[temp_arr[z].index].x += (width+10);\r\n                arr[temp_arr[z - 1].index].x -= (width+10);\r\n                \r\n                z = z - 1;\r\n                setTimeout(() => {\r\n                    \r\n                    this.setState({arr});\r\n                }, innerms);\r\n            }\r\n\r\n            \r\n        \r\n        }\r\n        // ================================================================\r\n    }\r\n\r\n    stopAnimation = ()=>{\r\n        this.setState({stop:true});\r\n        window.location.reload();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',height:'100px',width:'100%'}}>\r\n                    <div style={{display:'flex'}}>\r\n                        <motion.div \r\n                        \r\n                        initial={{height:'70px',width:'150px',backgroundColor:'#4CAF50',color:'white',borderRadius:'5px',padding:'5px',boxShadow:'0px 2px green',marginTop:'-25px'}}\r\n                        whileHover={{cursor:'pointer'}}\r\n                        >\r\n                            <Link  to=\"/Algorithm-Visualizer/\" style={{height:'70px',width:'150px',textDecoration:'none',color:'white',display:'flex',justifyContent:'center'}}>\r\n                                <p style={{height:'70px',width:'150px',display:'flex',justifyContent:'center'}}>Algorithm Visualizer</p>\r\n                            </Link>\r\n                        </motion.div>\r\n\r\n                        <Button onClick={this.generateNewArray} style={{margin:'10px'}} color=\"primary\" variant=\"contained\">Generate New Array</Button>\r\n                    </div>\r\n                    \r\n                    <Slider\r\n                        style={{width:'300px',margin:'10px'}}\r\n                        value={this.state.arraySize}\r\n                        onChange={this.handleChangeSlider}\r\n                        defaultValue={8}\r\n                        min={1}\r\n                        max={100}\r\n                        valueLabelDisplay=\"auto\"\r\n                    />\r\n                </div>\r\n                <Divider style={{height:'2px',width:'100%',margin:'10px 10px 0px 10px',backgroundColor:'white'}}/>\r\n                <div style={{width:'100%',display:'flex',justifyContent:'flex-end'}}>\r\n                    <div style={{width:'250px',backgroundColor:'#15314B',display:'flex',justifyContent:'center',marginRight:'5px'}}>\r\n                        <div style={{width:150,display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                        <MySlider\r\n                            defaultValue={1}\r\n                            getAriaValueText={this.valuetext}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={1}\r\n                            disabled={!this.state.stop}\r\n                            onChange={this.handleChangeSpeedSlider}\r\n                            marks = {marks}\r\n                            min={1}\r\n                            max={3}\r\n                            \r\n                        />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n\r\n                <div style={{display:'flex',justifyContent:'center',alignItems:'flex-end'}}>\r\n                    {\r\n                        this.state.arr.map((item,index)=>(\r\n                            <div key={index}>\r\n                            <Bar\r\n                                value={item.val}\r\n                                x = {item.x}\r\n                                color={item.color}\r\n                                width={this.state.width}\r\n                            />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div style={{display:'flex'}}>\r\n                    <Button onClick={this.startAnimation} style={{width:'200px', margin:'20px'}} color=\"secondary\" variant=\"contained\">Start</Button>\r\n                    <Button onClick={this.stopAnimation} style={{width:'200px', margin:'20px'}} color=\"secondary\" variant=\"contained\">Stop</Button>\r\n                </div>\r\n                \r\n                <Divider style={{height:'2px',width:'100%',margin:'10px',backgroundColor:'white'}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InsertionSort;","import { Button, Divider, Slider } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport Bar from './Bar';\r\nimport {sleep} from '../helper';\r\nimport _ from 'lodash';\r\nimport { motion } from 'framer-motion';\r\nimport {Link} from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst MySlider = withStyles({\r\n    markLabel:{\r\n      color:\"#fff\",\r\n      fontSize:'13px',\r\n      \r\n    },\r\n\r\n  })(Slider);\r\n  \r\n  const marks = [\r\n    {\r\n      value: 1,\r\n      label: '1X',\r\n    },\r\n    {\r\n      value: 2,\r\n      label: '2X',\r\n    },\r\n    {\r\n      value: 3,\r\n      label: '3X',\r\n    },\r\n  ];\r\n\r\nclass MergeSort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            arraySize:20,\r\n            arr:[],\r\n            width:30,\r\n            stop:true,\r\n            speed:1,\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    valuetext = (value)=> {\r\n        return `${value-1}X`;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.changeWidth();\r\n        this.generateNewArray();\r\n        \r\n    }\r\n\r\n    changeWidth = ()=>{\r\n        const {arraySize} = this.state;\r\n\r\n        if(arraySize<=35){\r\n            this.setState({width:30})\r\n        }\r\n        else if(arraySize>35 && arraySize<=50){\r\n            this.setState({width:20})\r\n        }\r\n        else{\r\n            this.setState({width:5})\r\n        }\r\n    }\r\n\r\n    handleChangeSlider=(event,val)=>{\r\n        this.setState({arraySize:val})\r\n        this.changeWidth();\r\n        this.generateNewArray();\r\n    }\r\n\r\n    handleChangeSpeedSlider = (event,val)=>{\r\n        this.setState({speed:val});\r\n    }\r\n\r\n    generateNewArray=()=>{\r\n        this.changeWidth();\r\n        let arr = [];\r\n        let min = 1,max = 500;\r\n        for(let i=0;i<this.state.arraySize;i++){\r\n            let rand = min + Math.random() * (max - min);\r\n            arr = [...arr,{val:Math.floor(rand),x:0,index:i,color:'#00FFFF'}];\r\n        }\r\n        this.setState({arr});\r\n    }\r\n\r\n    startAnimation= async ()=>{\r\n\r\n        this.setState({stop:false})\r\n        await sleep(100);\r\n\r\n        const {width,stop} = this.state;        \r\n\r\n        let arr = this.state.arr;\r\n        let temp_arr = _.clone(arr);\r\n        let n = this.state.arraySize;\r\n        let ms = 500;\r\n        let outerms,innerms;\r\n        let flag = false;\r\n\r\n        if(this.state.speed===1){\r\n            outerms=500;\r\n            innerms=1000;\r\n        }\r\n        else if(this.state.speed===2){\r\n            outerms=200;\r\n            innerms=500;\r\n        }\r\n        else{\r\n            outerms=10;\r\n            innerms=10;\r\n        }\r\n        \r\n        for(let i=0;i<n-1;i++){\r\n            await sleep(outerms);\r\n            for(let j=0;j<n-i-1;j++){\r\n                await sleep(innerms);\r\n                arr[temp_arr[j].index].color = '#303F9F';\r\n                arr[temp_arr[j+1].index].color = '#303F9F';\r\n                this.setState({arr});\r\n                if(temp_arr[j].val > temp_arr[j+1].val){\r\n                    let temp_obj = temp_arr[j];\r\n                    temp_arr[j] = temp_arr[j+1];\r\n                    temp_arr[j+1] = temp_obj;\r\n\r\n\r\n                    arr[temp_arr[j].index].x -= (width+10);\r\n                    arr[temp_arr[j+1].index].x += (width+10);                                     \r\n\r\n                    \r\n                }\r\n                console.log('arr',arr)\r\n                \r\n                arr[temp_arr[j].index].color = '#00FFFF';\r\n                arr[temp_arr[j+1].index].color = '#00FFFF';\r\n                setTimeout(() => {\r\n                    \r\n                    this.setState({arr});\r\n                }, innerms);\r\n  \r\n            }\r\n        }\r\n    }\r\n\r\n    stopAnimation = ()=>{\r\n        this.setState({stop:true});\r\n        window.location.reload();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',height:'100px',width:'100%'}}>\r\n                    <div style={{display:'flex'}}>\r\n                        <motion.div \r\n                        \r\n                        initial={{height:'70px',width:'150px',backgroundColor:'#4CAF50',color:'white',borderRadius:'5px',padding:'5px',boxShadow:'0px 2px green',marginTop:'-25px'}}\r\n                        whileHover={{cursor:'pointer'}}\r\n                        >\r\n                            <Link  to=\"/Algorithm-Visualizer/\" style={{height:'70px',width:'150px',textDecoration:'none',color:'white',display:'flex',justifyContent:'center'}}>\r\n                                <p style={{height:'70px',width:'150px',display:'flex',justifyContent:'center'}}>Algorithm Visualizer</p>\r\n                            </Link>\r\n                        </motion.div>\r\n\r\n                        <Button onClick={this.generateNewArray} style={{margin:'10px'}} color=\"primary\" variant=\"contained\">Generate New Array</Button>\r\n                    </div>\r\n                    \r\n                    <Slider\r\n                        style={{width:'300px',margin:'10px'}}\r\n                        value={this.state.arraySize}\r\n                        onChange={this.handleChangeSlider}\r\n                        defaultValue={8}\r\n                        min={1}\r\n                        max={100}\r\n                        valueLabelDisplay=\"auto\"\r\n                    />\r\n                </div>\r\n                <Divider style={{height:'2px',width:'100%',margin:'10px 10px 0px 10px',backgroundColor:'white'}}/>\r\n                <div style={{width:'100%',display:'flex',justifyContent:'flex-end'}}>\r\n                    <div style={{width:'250px',backgroundColor:'#15314B',display:'flex',justifyContent:'center',marginRight:'5px'}}>\r\n                        <div style={{width:150,display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                        <MySlider\r\n                            defaultValue={1}\r\n                            getAriaValueText={this.valuetext}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={1}\r\n                            disabled={!this.state.stop}\r\n                            onChange={this.handleChangeSpeedSlider}\r\n                            marks = {marks}\r\n                            min={1}\r\n                            max={3}\r\n                            \r\n                        />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n\r\n                <div style={{display:'flex',justifyContent:'center',alignItems:'flex-end'}}>\r\n                    {\r\n                        this.state.arr.map((item,index)=>(\r\n                            <div key={index}>\r\n                            <Bar\r\n                                value={item.val}\r\n                                x = {item.x}\r\n                                color={item.color}\r\n                                width={this.state.width}\r\n                            />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div style={{display:'flex'}}>\r\n                    <Button onClick={this.startAnimation} style={{width:'200px', margin:'20px'}} color=\"secondary\" variant=\"contained\">Start</Button>\r\n                    <Button onClick={this.stopAnimation} style={{width:'200px', margin:'20px'}} color=\"secondary\" variant=\"contained\">Stop</Button>\r\n                </div>\r\n                \r\n                <Divider style={{height:'2px',width:'100%',margin:'10px',backgroundColor:'white'}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MergeSort;","import { Divider, Button } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass HomeSearch extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            sorting_algo:[\r\n                {\r\n                    title:\"Linear Search\",\r\n                    theory:\"Linear search is a very simple search algorithm. In this type of search, a sequential search is made over all items one by one.\",\r\n                    path:\"/Algorithm-Visualizer/linear-search\",\r\n                    path2:\"/Algorithm-Visualizer/linear-search-info\"\r\n                },\r\n                {\r\n                    title:\"Binary Search\",\r\n                    theory:\"In binary search we search a sorted array by repeatedly dividing the search interval in half. Begin with an interval  ...\",\r\n                    path:\"/Algorithm-Visualizer/binary-search\",\r\n                    path2:\"/Algorithm-Visualizer/binary-search-info\"\r\n                },\r\n            ],\r\n            \r\n        }\r\n    }\r\n\r\n    generateNewArray=()=>{\r\n        let arr = [];\r\n        let min = 20,max = 100;\r\n        for(let i=0;i<10;i++){\r\n            let rand = min + Math.random() * (max - min);\r\n            arr=[...arr,rand]\r\n        }\r\n        return arr;\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Fade>\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',color:'white'}}>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'30px'}}>Algorithms Visualizer</div>\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>Searching Algorithms</div>\r\n                <div style={{width:'50%',display:'flex',justifyContent:'space-around',flexWrap:'wrap',alignItems:'center',marginTop:'30px'}}>\r\n                {\r\n                    this.state.sorting_algo.map((item,index)=>{\r\n                        return(\r\n                            <motion.div\r\n                                \r\n                                key={index}\r\n                                initial={{backgroundColor:'#00182E',color:'#fff',borderRadius:'5px',cursor:'pointer',margin:'10px',width:'300px',height:'350px',display:'flex',justifyContent:'space-between',alignItems:'center',flexDirection:'column'}}\r\n                                whileHover={{boxShadow:'3px 2px 2px  aqua',scale:'1.1',transition:'transform 6s cubic-bezier(0.075, 0.82, 0.165, 1)'}}\r\n                                \r\n                                >\r\n                                <div style={{width:'300px',height:'175px',display:'flex',alignItems:'flex-end',justifyContent:'center',backgroundColor:'#ff00ff'}}>\r\n                                    {\r\n                                            this.generateNewArray().map((it1,itr)=>{\r\n                                                return(\r\n                                                    <span key={itr} style={{backgroundColor:'white',height:`${it1}px`,width:'20px',margin:'2px',}}>\r\n                                                    </span>\r\n                                                )\r\n                                            })\r\n                                    }\r\n                                </div>\r\n                                <motion.div initial={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',width:'300px'}}\r\n                                    whileHover={{backgroundColor:'#02203C'}}\r\n                                >\r\n                                    <div style={{width:'270px'}}>\r\n                                        <h2>\r\n                                            {item.title}\r\n                                        </h2>\r\n                                        <p>\r\n                                            {item.theory}\r\n                                        </p>\r\n                                    </div>\r\n                                    \r\n                                </motion.div>\r\n                                <div style={{display:'flex',justifyContent:'space-between',width:'270px',margin:'5px'}}>\r\n                                        <Link to={item.path} style={{textDecoration:'none',color:'#C51162',margin:'5px'}}>Visualization</Link>\r\n                                        <Link to={item.path2} style={{textDecoration:'none',color:'#303F9F',margin:'5px'}}>Learn more</Link>\r\n                                </div>\r\n                                \r\n                                {/* <Link style={{textDecoration:'none',color:'#fff',width:'100%',height:'100%',display:'flex',justifyContent:'center',alignItems:'center'}} to=\"/bubble-sort\"> */}\r\n                                    {/* <div style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                                        <h1>{item.title}</h1>\r\n                                        <h2>Sort</h2>\r\n                                    </div> */}\r\n                                    \r\n                                {/* </Link> */}\r\n                            </motion.div>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white',marginTop:'30px'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Home Page</Button>\r\n                </div>\r\n            </div>\r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeSearch;","import { Divider, Button } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass HomeSort extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            sorting_algo:[\r\n                {\r\n                    title:\"Bubble Sort\",\r\n                    theory:\"Bubble sort, sometimes referred to as sinking sort, is a simple sorting algorithm that repeatedly steps through the list,  ....\",\r\n                    path:\"/Algorithm-Visualizer/bubble-sort\",\r\n                    path2:\"/Algorithm-Visualizer/bubble-sort-info\"\r\n                },\r\n                {\r\n                    title:\"Selection Sort\",\r\n                    theory:\"The selection sort algorithm sorts an array by repeatedly finding the minimum element (considering ascending order) from ......\",\r\n                    path:\"/Algorithm-Visualizer/selection-sort\",\r\n                    path2:\"/Algorithm-Visualizer/selection-sort-info\"\r\n                },\r\n                {\r\n                    title:\"Insertion Sort\",\r\n                    theory:\"Insertion sort is a simple sorting algorithm that works similar to the way you sort playing cards in your hands. The array ....\",\r\n                    path:\"/Algorithm-Visualizer/insertion-sort\",\r\n                    path2:\"/Algorithm-Visualizer/insertion-sort-info\"\r\n                },\r\n\r\n            ],\r\n            \r\n        }\r\n    }\r\n\r\n    generateNewArray=()=>{\r\n        let arr = [];\r\n        let min = 20,max = 100;\r\n        for(let i=0;i<10;i++){\r\n            let rand = min + Math.random() * (max - min);\r\n            arr=[...arr,rand]\r\n        }\r\n        return arr;\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Fade>\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',color:'white'}}>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'30px'}}>Algorithms Visualizer</div>\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>Sorting Algorithms</div>\r\n                <div style={{width:'60%',display:'flex',justifyContent:'space-around',flexWrap:'wrap',alignItems:'center',marginTop:'30px'}}>\r\n                {\r\n                    this.state.sorting_algo.map((item,index)=>{\r\n                        return(\r\n                            <motion.div\r\n                                \r\n                                key={index}\r\n                                initial={{backgroundColor:'#00182E',color:'#fff',borderRadius:'5px',cursor:'pointer',margin:'10px',width:'300px',height:'350px',display:'flex',justifyContent:'space-between',alignItems:'center',flexDirection:'column'}}\r\n                                whileHover={{boxShadow:'3px 2px 2px  aqua',scale:'1.1',transition:'transform 6s cubic-bezier(0.075, 0.82, 0.165, 1)'}}\r\n                                \r\n                                >\r\n                                <div style={{width:'300px',height:'175px',display:'flex',alignItems:'flex-end',justifyContent:'center',backgroundColor:'#54BD68'}}>\r\n                                    {\r\n                                            this.generateNewArray().map((it1,itr)=>{\r\n                                                return(\r\n                                                    <span key={itr} style={{backgroundColor:'white',height:`${it1}px`,width:'20px',margin:'2px',}}>\r\n                                                    </span>\r\n                                                )\r\n                                            })\r\n                                    }\r\n                                </div>\r\n                                <motion.div initial={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',width:'300px'}}\r\n                                    whileHover={{backgroundColor:'#02203C'}}\r\n                                >\r\n                                    <div style={{width:'270px'}}>\r\n                                        <h2>\r\n                                            {item.title}\r\n                                        </h2>\r\n                                        <p>\r\n                                            {item.theory}\r\n                                        </p>\r\n                                    </div>\r\n                                    \r\n                                </motion.div>\r\n                                <div style={{display:'flex',justifyContent:'space-between',width:'270px',margin:'5px'}}>\r\n                                        <Link to={item.path} style={{textDecoration:'none',color:'#C51162',margin:'5px'}}>Visualization</Link>\r\n                                        <Link to={item.path2} style={{textDecoration:'none',color:'#303F9F',margin:'5px'}}>Learn more</Link>\r\n                                </div>\r\n                                \r\n                                {/* <Link style={{textDecoration:'none',color:'#fff',width:'100%',height:'100%',display:'flex',justifyContent:'center',alignItems:'center'}} to=\"/bubble-sort\"> */}\r\n                                    {/* <div style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                                        <h1>{item.title}</h1>\r\n                                        <h2>Sort</h2>\r\n                                    </div> */}\r\n                                    \r\n                                {/* </Link> */}\r\n                            </motion.div>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white',marginTop:'30px'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Home Page</Button>\r\n                </div>\r\n            </div>\r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeSort;","import { Button, Divider, Slider } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport Bar from './Bar';\r\nimport {sleep} from '../helper';\r\nimport _ from 'lodash';\r\nimport { motion } from 'framer-motion';\r\nimport {Link} from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst MySlider = withStyles({\r\n    markLabel:{\r\n      color:\"#fff\",\r\n      fontSize:'13px',\r\n      \r\n    },\r\n\r\n  })(Slider);\r\n  \r\n  const marks = [\r\n    {\r\n      value: 1,\r\n      label: '1X',\r\n    },\r\n    {\r\n      value: 2,\r\n      label: '2X',\r\n    },\r\n    {\r\n      value: 3,\r\n      label: '3X',\r\n    },\r\n  ];\r\n\r\nclass LinearSearch extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            arraySize:20,\r\n            arr:[],\r\n            width:30,\r\n            stop:true,\r\n            speed:1,\r\n            search: 0,\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    valuetext = (value)=> {\r\n        return `${value-1}X`;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.changeWidth();\r\n        this.generateNewArray();\r\n        \r\n    }\r\n\r\n    changeWidth = ()=>{\r\n        const {arraySize} = this.state;\r\n\r\n        if(arraySize<=35){\r\n            this.setState({width:30})\r\n        }\r\n        else if(arraySize>35 && arraySize<=50){\r\n            this.setState({width:20})\r\n        }\r\n        else{\r\n            this.setState({width:5})\r\n        }\r\n    }\r\n\r\n    handleChangeSlider=(event,val)=>{\r\n        this.setState({arraySize:val})\r\n        this.changeWidth();\r\n        this.generateNewArray();\r\n    }\r\n\r\n    handleChangeSpeedSlider = (event,val)=>{\r\n        this.setState({speed:val});\r\n    }\r\n\r\n    generateNewArray=()=>{\r\n        this.changeWidth();\r\n        let arr = [];\r\n        let min = 1,max = 500;\r\n        for(let i=0;i<this.state.arraySize;i++){\r\n            let rand = min + Math.random() * (max - min);\r\n            arr = [...arr,{val:Math.floor(rand),x:0,index:i,color:'#00FFFF'}];\r\n        }\r\n        this.setState({arr});\r\n    }\r\n\r\n    startAnimation= async ()=>{\r\n\r\n        this.setState({stop:false})\r\n        await sleep(100);\r\n\r\n        const {width,stop} = this.state;        \r\n\r\n        let arr = this.state.arr;\r\n        let temp_arr = _.clone(arr);\r\n        let n = this.state.arraySize;\r\n        let ms = 500;\r\n        let outerms,innerms;\r\n        let flag = false;\r\n\r\n        if(this.state.speed===1){\r\n            outerms=500;\r\n            innerms=1000;\r\n        }\r\n        else if(this.state.speed===2){\r\n            outerms=200;\r\n            innerms=500;\r\n        }\r\n        else{\r\n            outerms=10;\r\n            innerms=10;\r\n        }\r\n        \r\n        for(let i=0;i<n;i++){\r\n            arr[temp_arr[i].index].color = '#303F9F'\r\n            await sleep(innerms);\r\n            this.setState({arr});\r\n\r\n            if(temp_arr[i].val == this.state.search){\r\n                arr[temp_arr[i].index].color = '#ff0000'\r\n                this.setState({arr});\r\n                break;\r\n            }\r\n\r\n            else{\r\n                arr[temp_arr[i].index].color = '#00FFFF'\r\n            }\r\n\r\n            setTimeout(() => {\r\n                    \r\n                this.setState({arr});\r\n            }, innerms);\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    stopAnimation = ()=>{\r\n        this.setState({stop:true});\r\n    }\r\n\r\n    disableInput = ()=>{\r\n        this.setState({disabled:true});\r\n    }\r\n\r\n    enableInput = ()=>{\r\n        this.setState({disabled:false});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',height:'100px',width:'100%'}}>\r\n                    <div style={{display:'flex'}}>\r\n                        <motion.div \r\n                        \r\n                        initial={{height:'70px',width:'150px',backgroundColor:'#4CAF50',color:'white',borderRadius:'5px',padding:'5px',boxShadow:'0px 2px green',marginTop:'-25px'}}\r\n                        whileHover={{cursor:'pointer'}}\r\n                        >\r\n                            <Link  to=\"/Algorithm-Visualizer/\" style={{height:'70px',width:'150px',textDecoration:'none',color:'white',display:'flex',justifyContent:'center'}}>\r\n                                <p style={{height:'70px',width:'150px',display:'flex',justifyContent:'center'}}>Algorithm Visualizer</p>\r\n                            </Link>\r\n                        </motion.div>\r\n\r\n                        <Button onClick={this.generateNewArray} style={{margin:'10px'}} color=\"primary\" variant=\"contained\">Generate New Array</Button>\r\n                    </div>\r\n                    \r\n                    <Slider\r\n                        style={{width:'300px',margin:'10px'}}\r\n                        value={this.state.arraySize}\r\n                        onChange={this.handleChangeSlider}\r\n                        defaultValue={8}\r\n                        min={1}\r\n                        max={100}\r\n                        valueLabelDisplay=\"auto\"\r\n                    />\r\n                </div>\r\n                <Divider style={{height:'2px',width:'100%',margin:'10px 10px 0px 10px',backgroundColor:'white'}}/>\r\n                <div style={{width:'100%',display:'flex',justifyContent:'flex-end'}}>\r\n                    <div style={{width:'250px',backgroundColor:'#15314B',display:'flex',justifyContent:'center',marginRight:'5px'}}>\r\n                        <div style={{width:150,display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                        <MySlider\r\n                            defaultValue={1}\r\n                            getAriaValueText={this.valuetext}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={1}\r\n                            disabled={!this.state.stop}\r\n                            onChange={this.handleChangeSpeedSlider}\r\n                            marks = {marks}\r\n                            min={1}\r\n                            max={3}\r\n                            \r\n                        />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n\r\n                <div style={{display:'flex',justifyContent:'center',alignItems:'flex-end'}}>\r\n                    {\r\n                        this.state.arr.map((item,index)=>(\r\n                            <div key={index}>\r\n                            <Bar\r\n                                value={item.val}\r\n                                x = {item.x}\r\n                                color={item.color}\r\n                                width={this.state.width}\r\n                            />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div style={{display:'flex'}}>\r\n                    <TextField id=\"standard-basic\" \r\n                                InputProps={{\r\n                                        style: {\r\n                                            background: 'rgb(232, 241, 250)',\r\n                                            width: '90%',\r\n                                            paddingBottom: 0,\r\n                                            marginTop: 25,\r\n                                            fontWeight: 500,\r\n                                        }\r\n                                    }}\r\n                                label=\"Search\" disabled={this.state.disabled} placeholder={this.state.search.toString()} onChange={(e) => { this.setState({search: e.target.value}) }}/>  \r\n                    <Button onClick={() => {this.startAnimation(); this.disableInput()}} style={{width:'200px', margin:'20px'}} color=\"secondary\" variant=\"contained\">Start</Button>\r\n                    {/* <Button onClick={this.stopAnimation} style={{width:'200px', margin:'20px'}} href=\"/Algorithm-Visualizer/linear-search\" color=\"secondary\" variant=\"contained\">Stop</Button> */}\r\n                </div>\r\n                \r\n                <Divider style={{height:'2px',width:'100%',margin:'10px',backgroundColor:'white'}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LinearSearch;","import { Button, Divider, Slider } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport Bar from './Bar';\r\nimport {sleep} from '../helper';\r\nimport _ from 'lodash';\r\nimport { motion } from 'framer-motion';\r\nimport {Link} from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nconst MySlider = withStyles({\r\n    markLabel:{\r\n      color:\"#fff\",\r\n      fontSize:'13px',\r\n      \r\n    },\r\n\r\n  })(Slider);\r\n  \r\n  const marks = [\r\n    {\r\n      value: 1,\r\n      label: '1X',\r\n    },\r\n    {\r\n      value: 2,\r\n      label: '2X',\r\n    },\r\n    {\r\n      value: 3,\r\n      label: '3X',\r\n    },\r\n  ];\r\n\r\nclass BinarySearch extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            arraySize:20,\r\n            arr:[],\r\n            width:30,\r\n            stop:true,\r\n            speed:1,\r\n            search: 0,\r\n            disabled: false\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    valuetext = (value)=> {\r\n        return `${value-1}X`;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.changeWidth();\r\n        this.generateNewArray();\r\n        \r\n    }\r\n\r\n    changeWidth = ()=>{\r\n        const {arraySize} = this.state;\r\n\r\n        if(arraySize<=35){\r\n            this.setState({width:30})\r\n        }\r\n        else if(arraySize>35 && arraySize<=50){\r\n            this.setState({width:20})\r\n        }\r\n        else{\r\n            this.setState({width:5})\r\n        }\r\n    }\r\n\r\n    handleChangeSlider=(event,val)=>{\r\n        this.setState({arraySize:val})\r\n        this.changeWidth();\r\n        this.generateNewArray();\r\n    }\r\n\r\n    handleChangeSpeedSlider = (event,val)=>{\r\n        this.setState({speed:val});\r\n    }\r\n\r\n    numberSort = function(a, b) { return a - b; };\r\n\r\n    generateNewArray=()=>{\r\n        this.changeWidth();\r\n        let arr = [];\r\n        let randNum = [];\r\n        let min = 1,max = 500;\r\n        for(let i=0;i<this.state.arraySize;i++){\r\n            let rand = min + Math.random() * (max - min);\r\n            randNum.push(Math.floor(rand));\r\n            randNum.sort(this.numberSort);\r\n        }\r\n\r\n        for(let i=0; i<randNum.length;i++){\r\n            arr = [...arr,{val:Math.floor(randNum[i]),x:0,index:i,color:'#00FFFF'}];\r\n        }\r\n        \r\n        this.setState({arr});\r\n    }\r\n\r\n    startAnimation= async ()=>{\r\n\r\n        this.setState({stop:false})\r\n        await sleep(100);\r\n\r\n        const {width,stop} = this.state;        \r\n\r\n        let arr = this.state.arr;\r\n        let temp_arr = _.clone(arr);\r\n        let n = this.state.arraySize;\r\n        let ms = 500;\r\n        let outerms,innerms;\r\n        let flag = false;\r\n\r\n        if(this.state.speed===1){\r\n            outerms=1000;\r\n            innerms=3000;\r\n        }\r\n        else if(this.state.speed===2){\r\n            outerms=400;\r\n            innerms=1500;\r\n        }\r\n        else{\r\n            outerms=20;\r\n            innerms=30;\r\n        }\r\n\r\n        let l = 0;\r\n        let u = temp_arr.length - 1;\r\n        let prev_m = -1;\r\n        while(l <= u){\r\n            let m = l + Math.floor((u - l) / 2);            \r\n            arr[temp_arr[m].index].color = '#303F9F';\r\n            this.setState({arr});\r\n            await sleep(innerms);\r\n            prev_m = m;\r\n            if (temp_arr[m].val == this.state.search){\r\n                \r\n                arr[temp_arr[m].index].color = '#ff0000'\r\n                for(let z = 0; z < temp_arr.length; z++){\r\n                    if(z != m){\r\n                        arr[temp_arr[z].index].color = '#00FFFF';\r\n                    }\r\n                }\r\n                this.enableInput();\r\n                this.setState({arr});\r\n\r\n                break;\r\n            }\r\n\r\n            else if(temp_arr[m].val < this.state.search){\r\n                l = m + 1;\r\n                for(let z = 0; z < m + 1; z++){\r\n                    arr[temp_arr[z].index].color = '#282c34';\r\n                    this.setState({arr});\r\n                }\r\n                await sleep(outerms);\r\n\r\n            }\r\n            else{\r\n                u = m - 1;\r\n                for(let z = m; z < temp_arr.length; z++){\r\n                    arr[temp_arr[z].index].color = '#282c34';\r\n                    this.setState({arr});\r\n                }\r\n                await sleep(outerms);\r\n            }\r\n            setTimeout(() => {\r\n                    \r\n                this.setState({arr});\r\n            }, innerms);\r\n        }\r\n        \r\n    }\r\n\r\n    stopAnimation = ()=>{\r\n        this.setState({stop:true});\r\n    }\r\n\r\n    disableInput = ()=>{\r\n        this.setState({disabled:true});\r\n    }\r\n\r\n    enableInput = ()=>{\r\n        this.setState({disabled:false});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',height:'100px',width:'100%'}}>\r\n                    <div style={{display:'flex'}}>\r\n                        <motion.div \r\n                        \r\n                        initial={{height:'70px',width:'150px',backgroundColor:'#4CAF50',color:'white',borderRadius:'5px',padding:'5px',boxShadow:'0px 2px green',marginTop:'-25px'}}\r\n                        whileHover={{cursor:'pointer'}}\r\n                        >\r\n                            <Link  to=\"/Algorithm-Visualizer/\" style={{height:'70px',width:'150px',textDecoration:'none',color:'white',display:'flex',justifyContent:'center'}}>\r\n                                <p style={{height:'70px',width:'150px',display:'flex',justifyContent:'center'}}>Algorithm Visualizer</p>\r\n                            </Link>\r\n                        </motion.div>\r\n\r\n                        <Button onClick={this.generateNewArray} style={{margin:'10px'}} color=\"primary\" variant=\"contained\">Generate New Array</Button>\r\n                    </div>\r\n                    \r\n                    <Slider\r\n                        style={{width:'300px',margin:'10px'}}\r\n                        value={this.state.arraySize}\r\n                        onChange={this.handleChangeSlider}\r\n                        defaultValue={8}\r\n                        min={1}\r\n                        max={100}\r\n                        valueLabelDisplay=\"auto\"\r\n                    />\r\n                </div>\r\n                <Divider style={{height:'2px',width:'100%',margin:'10px 10px 0px 10px',backgroundColor:'white'}}/>\r\n                <div style={{width:'100%',display:'flex',justifyContent:'flex-end'}}>\r\n                    <div style={{width:'250px',backgroundColor:'#15314B',display:'flex',justifyContent:'center',marginRight:'5px'}}>\r\n                        <div style={{width:150,display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                        <MySlider\r\n                            defaultValue={1}\r\n                            getAriaValueText={this.valuetext}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={1}\r\n                            disabled={!this.state.stop}\r\n                            onChange={this.handleChangeSpeedSlider}\r\n                            marks = {marks}\r\n                            min={1}\r\n                            max={3}\r\n                            \r\n                        />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n\r\n                <div style={{display:'flex',justifyContent:'center',alignItems:'flex-end'}}>\r\n                    {\r\n                        this.state.arr.map((item,index)=>(\r\n                            <div key={index}>\r\n                            <Bar\r\n                                value={item.val}\r\n                                x = {item.x}\r\n                                color={item.color}\r\n                                width={this.state.width}\r\n                            />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                \r\n                <div style={{display:'flex'}}>\r\n                    \r\n                    <TextField id=\"standard-basic\" \r\n                                InputProps={{\r\n                                        style: {\r\n                                            background: 'rgb(232, 241, 250)',\r\n                                            width: '90%',\r\n                                            paddingBottom: 0,\r\n                                            marginTop: 25,\r\n                                            fontWeight: 500,\r\n                                        }\r\n                                    }}\r\n                                label=\"Search\" disabled={this.state.disabled} placeholder={this.state.search.toString()} onChange={(e) => { this.setState({search: e.target.value}) }}/>  \r\n                    <Button onClick={() => {this.startAnimation(); this.disableInput()}} style={{width:'200px', margin:'20px'}} color=\"secondary\" variant=\"contained\">Start</Button>\r\n                    {/* <Button onClick={this.stopAnimation} style={{width:'200px', margin:'20px'}} href=\"/Algorithm-Visualizer/binary-search\" color=\"secondary\" variant=\"contained\">Stop</Button> */}\r\n                </div>\r\n                \r\n                <Divider style={{height:'2px',width:'100%',margin:'10px',backgroundColor:'white'}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BinarySearch;","import { Divider, Button } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass BubbleInfo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fade>\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',color:'white'}}>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'30px'}}>Algorithms Visualizer</div>\r\n\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>Bubble Sort</div>\r\n                <div style={{width:'60%',display:'flex',justifyContent:'space-around',flexWrap:'wrap',alignItems:'center',marginTop:'30px'}}>\r\n                {\r\n                    <p>\r\n                        Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in wrong order.<br/><br/>\r\n                        <strong>Example:</strong>&nbsp;<br/>\r\n                        <strong>First Pass:</strong>&nbsp;<br/>\r\n                        ( <strong>5</strong> <strong>1</strong> 4 2 8 ) &#8211;&gt; ( <strong>1</strong> <strong>5</strong> 4 2 8 ), Here, algorithm compares the first two elements, and swaps since 5 &gt; 1.&nbsp;<br/>\r\n                        ( 1 <strong>5</strong> <strong>4</strong> 2 8 ) &#8211;&gt;&nbsp; ( 1 <strong>4</strong> <strong>5</strong> 2 8 ), Swap since 5 &gt; 4&nbsp;<br/>\r\n                        ( 1 4 <strong>5</strong> <strong>2</strong> 8 ) &#8211;&gt;&nbsp; ( 1 4 <strong>2</strong> <strong>5</strong> 8 ), Swap since 5 &gt; 2&nbsp;<br/>\r\n                        ( 1 4 2 <strong>5</strong> <strong>8</strong> ) &#8211;&gt; ( 1 4 2 <strong>5</strong> <strong>8</strong> ), Now, since these elements are already in order (8 &gt; 5), algorithm does not swap them.<br/>\r\n                        <strong>Second Pass:</strong>&nbsp;<br/>\r\n                        ( <strong>1</strong> <strong>4</strong> 2 5 8 ) &#8211;&gt; ( <strong>1</strong> <strong>4</strong> 2 5 8 )&nbsp;<br/>\r\n                        ( 1 <strong>4</strong> <strong>2</strong> 5 8 ) &#8211;&gt; ( 1 <strong>2</strong> <strong>4</strong> 5 8 ), Swap since 4 &gt; 2&nbsp;<br/>\r\n                        ( 1 2 <strong>4</strong> <strong>5</strong> 8 ) &#8211;&gt; ( 1 2 <strong>4</strong> <strong>5</strong> 8 )&nbsp;<br/>\r\n                        ( 1 2 4 <strong>5</strong> <strong>8</strong> ) &#8211;&gt;&nbsp; ( 1 2 4 <strong>5</strong> <strong>8</strong> )&nbsp;<br/>\r\n                        Now, the array is already sorted, but our algorithm does not know if it is completed. The algorithm needs one <strong>whole</strong> pass without <strong>any</strong> swap to know it is sorted.<br/>\r\n                        <strong>Third Pass:</strong>&nbsp;<br />\r\n                        ( <strong>1</strong> <strong>2</strong> 4 5 8 ) &#8211;&gt; ( <strong>1</strong> <strong>2</strong> 4 5 8 )&nbsp;<br/>\r\n                        ( 1 <strong>2</strong> <strong>4</strong> 5 8 ) &#8211;&gt; ( 1 <strong>2</strong> <strong>4</strong> 5 8 )&nbsp;<br/>\r\n                        ( 1 2 <strong>4</strong> <strong>5</strong> 8 ) &#8211;&gt; ( 1 2 <strong>4</strong> <strong>5</strong> 8 )&nbsp;<br/>\r\n                        ( 1 2 4 <strong>5</strong> <strong>8</strong> ) &#8211;&gt; ( 1 2 4 <strong>5</strong> <strong>8</strong> )&nbsp;<br/><br/><br/>\r\n                        <strong>Time Complexity: </strong>O(n<sup>2</sup>)\r\n\r\n                    </p>\r\n                    \r\n                }\r\n                </div>\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white',marginTop:'30px'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Home Page</Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer/bubble-sort\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Visualize</Button>\r\n                                            \r\n                </div>\r\n\r\n            </div>\r\n            \r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BubbleInfo;","import { Divider, Button } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass SelectionInfo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fade>\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',color:'white'}}>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'30px'}}>Algorithms Visualizer</div>\r\n\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>Selection Sort</div>\r\n                <div style={{width:'60%',display:'flex',justifyContent:'space-around',flexWrap:'wrap',alignItems:'center',marginTop:'30px'}}>\r\n                {\r\n                    <p>\r\n                        The selection sort algorithm sorts an array by repeatedly finding the minimum element (considering ascending order) from unsorted part and putting it at the beginning. The algorithm maintains two subarrays in a given array.<br/>\r\n                        1) The subarray which is already sorted.&nbsp;<br/>\r\n                        2) Remaining subarray which is unsorted.<br/>\r\n                        In every iteration of selection sort, the minimum element (considering ascending order) from the unsorted subarray is picked and moved to the sorted subarray.&nbsp;<br/>\r\n                        <br/>\r\n                        Following example explains the above steps:&nbsp;<br/>\r\n                        \r\n                            arr[ ] = 64 25 12 22 11<br/><br/>\r\n\r\n                            Find the minimum element in arr[0...4]<br/>\r\n                            and place it at beginning<br/>\r\n                            <strong>11 </strong>25 12 22 64<br/><br/>\r\n\r\n                            Find the minimum element in arr[1...4]<br/>\r\n                            and place it at beginning of arr[1...4]<br/>\r\n                            11 <strong>12 </strong>25 22 64<br/><br/>\r\n\r\n                            Find the minimum element in arr[2...4]<br/>\r\n                            and place it at beginning of arr[2...4]<br/>\r\n                            11 12 <strong>22 </strong>25 64<br/><br/>\r\n\r\n                            Find the minimum element in arr[3...4]<br/>\r\n                            and place it at beginning of arr[3...4]<br/>\r\n                            11 12 22 <strong>25 </strong>64<br/><br/><br/>\r\n                            <strong>Time Complexity: </strong>O(n<sup>2</sup>)\r\n                    </p>\r\n                    \r\n                }\r\n                </div>\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white',marginTop:'30px'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Home Page</Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer/selection-sort\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Visualize</Button>\r\n                                            \r\n                </div>\r\n\r\n            </div>\r\n            \r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionInfo;","import { Divider, Button } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass LinearInfo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fade>\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',color:'white'}}>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'30px'}}>Algorithms Visualizer</div>\r\n\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>Linear Search</div>\r\n                <div style={{width:'60%',display:'flex',justifyContent:'space-around',flexWrap:'wrap',alignItems:'center',marginTop:'30px'}}>\r\n                {\r\n                    <p>\r\n                        Linear search is a very simple search algorithm. In this type of search, a sequential search is made over all items one by one. \r\n                        Every item is checked and if a match is found then that particular item is returned, \r\n                        otherwise the search continues till the end of the data collection.<br/><br/><br/>\r\n                        \r\n                        The simple steps to perform  a <strong>linear search</strong> are:\r\n                        <ul>\r\n                            <li>Start from the leftmost element of arr[ ] and one by one compare x with each element of arr[ ]</li>\r\n                            <li>If x matches with an element, return the index.</li>\r\n                            <li>If x doesn&#8217;t match with any of elements, return -1.</li>\r\n                        </ul>\r\n                        \r\n                        <br/><br/><br/><strong>Time Complexity: </strong>O(n)\r\n\r\n                    </p>\r\n                    \r\n                }\r\n                </div>\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white',marginTop:'30px'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Home Page</Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer/linear-search\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Visualize</Button>\r\n                                            \r\n                </div>\r\n\r\n            </div>\r\n            \r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LinearInfo;","import { Divider, Button } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass BinaryInfo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fade>\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',color:'white'}}>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'30px'}}>Algorithms Visualizer</div>\r\n\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>Binary Search</div>\r\n                <div style={{width:'60%',display:'flex',justifyContent:'space-around',flexWrap:'wrap',alignItems:'center',marginTop:'30px'}}>\r\n                {\r\n                    <p>\r\n                        In binary search we search a sorted array by repeatedly dividing the search interval in half. \r\n                        Begin with an interval covering the whole array. \r\n                        If the value of the search key is less than the item in the middle of the interval, narrow the interval to the lower half. \r\n                        Otherwise, narrow it to the upper half. Repeatedly check until the value is found or the interval is empty.<br/><br/><br/>\r\n\r\n                        We basically ignore half of the elements just after one comparison.\r\n                        <ol>\r\n                            <li>Compare x with the middle element.</li>\r\n                            <li>If x matches with the middle element, we return the mid index.</li>\r\n                            <li>Else If x is greater than the mid element, then x can only lie in the right half subarray after the mid element.\r\n                                So we recur for the right half.</li>\r\n                            <li>Else (x is smaller) recur for the left half.</li>\r\n                        </ol>\r\n\r\n\r\n                        <br/><br/><br/><strong>Time Complexity: </strong>O(Log n)\r\n\r\n                    </p>\r\n                    \r\n                }\r\n                </div>\r\n                <Divider style={{height:'2px',width:'80%',margin:'10px',backgroundColor:'white',marginTop:'30px'}}/>\r\n                <div style={{margin:'10px',fontWeight:'bolder',fontSize:'18px'}}>\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Home Page</Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button variant=\"contained\" href=\"/Algorithm-Visualizer/binary-search\" style={{\r\n                                                borderRadius: 35,\r\n                                                backgroundColor: \"#00182E\",\r\n                                                padding: \"18px 36px\",\r\n                                                fontSize: \"18px\",\r\n                                                color: \"#ffff\"\r\n                                            }}>Visualize</Button>\r\n                                            \r\n                </div>\r\n\r\n            </div>\r\n            \r\n            </Fade>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BinaryInfo;","import './App.css';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {createStore} from 'redux';\nimport reducers from './Redux Store/reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport InsertionInfo from './Components/InfoPages/InsertionInfo';\nimport SelectionSort from './Components/SelectionSort';\nimport Home from './Components/Home';\nimport BubbleSort from './Components/BubbleSort';\nimport InsertionSort from './Components/InsertionSort';\nimport MergeSort from './Components/MergeSort';\nimport HomeSearch from './Components/HomeSearch';\nimport HomeSort from './Components/HomeSort';\nimport LinearSearch from './Components/LinearSearch';\nimport BinarySearch from './Components/BinarySearch';\nimport BubbleInfo from './Components/InfoPages/BubbleInfo';\nimport SelectionInfo from './Components/InfoPages/SelectionInfo';\nimport LinearInfo from './Components/InfoPages/LinearInfo';\nimport BinaryInfo from './Components/InfoPages/BinaryInfo';\n\nconst store = createStore(reducers,composeWithDevTools());\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/Algorithm-Visualizer\" component={Home}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/searching\" component={HomeSearch}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/sorting\" component={HomeSort}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/bubble-sort\" component={BubbleSort}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/selection-sort\" component={SelectionSort}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/insertion-sort\" component={SelectionSort}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/merge-sort\" component={MergeSort}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/linear-search\" component={LinearSearch}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/binary-search\" component={BinarySearch}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/bubble-sort-info\" component={BubbleInfo}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/insertion-sort-info\" component={InsertionInfo}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/selection-sort-info\" component={SelectionInfo}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/linear-search-info\" component={LinearInfo}></Route>\n            <Route exact path=\"/Algorithm-Visualizer/binary-search-info\" component={BinaryInfo}></Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}